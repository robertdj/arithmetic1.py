name: Test Python

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

# concurrency:
#   group: ${{ github.workflow }}-${{ github.ref }}
#   cancel-in-progress: true

# defaults:
#   run:
#     working-directory: py-polars

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.11']

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
          # cache-dependency-path: 'py-polars/requirements-dev.txt'

      # - name: Create virtual environment
      #   run: |
      #     python -m venv venv
      #     echo "$GITHUB_WORKSPACE/py-polars/venv/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: |
          # python -m pip install -U pip
          python -m pip install -r requirements.txt
          python -m pip install -e .

      # Allow untyped calls for older Python versions
      # - name: Run mypy
      #   run: mypy ${{ (matrix.python-version == '3.7') && '--allow-untyped-calls' || '' }}

      # - name: Set up Rust
      #   uses: dtolnay/rust-toolchain@master
      #   with:
      #     toolchain: nightly-2022-12-20

      # - name: Cache Rust
      #   uses: Swatinem/rust-cache@v2
      #   with:
      #     workspaces: py-polars

      # - name: Install Polars
      #   env:
      #     RUSTFLAGS: -C debuginfo=0  # Do not produce debug symbols to keep memory usage down
      #   run: |
      #     source activate
      #     maturin develop

      - name: Run tests and report coverage
        run: pytest --cov

      # - name: Run doctests
      #   run: python tests/docs/run_doc_examples.py

